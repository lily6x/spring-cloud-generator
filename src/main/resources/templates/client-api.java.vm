package ${customInfo.packageName};

import ${groupId}.domain.${entity}DM;
import org.springframework.cloud.openfeign.FallbackFactory;
import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.stereotype.Component;

import java.util.List;


@FeignClient(value = "${model}-service", fallbackFactory = ${entity}DomainApiClient.${entity}DomainApiFallbackFactory.class)
public interface ${entity}DomainApiClient extends ${entity}DomainIApi {

    @Component
    class ${entity}DomainApiFallbackFactory implements FallbackFactory<${entity}DomainApiFallbackWithFactory> {

        @Override
        public ${entity}DomainApiFallbackWithFactory create(Throwable cause) {
            return new ${entity}DomainApiFallbackWithFactory();
        }
    }

    class ${entity}DomainApiFallbackWithFactory implements ${entity}DomainApiClient {
        @Override
        public List<${entity}DM> getAll(${entity}DM ${controllerMappingHyphen}DM) {
            return List.of();
        }

        @Override
        public ${entity}DM add(${entity}DM ${controllerMappingHyphen}DM) {
            return null;
        }

        @Override
        public List<${entity}DM> page(${entity}DM ${controllerMappingHyphen}DM, Integer current, Integer size) {
            return List.of();
        }

        @Override
        public ${entity}DM queryOne(${entity}DM ${controllerMappingHyphen}DM) {
            return null;
        }

        @Override
        public ${entity}DM update(${entity}DM ${controllerMappingHyphen}DM) {
            return null;
        }

        @Override
        public ${entity}DM delete(${entity}DM ${controllerMappingHyphen}DM) {
            return null;
        }
    }

}



