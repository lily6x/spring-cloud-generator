package ${customInfo.packageName};

import ${groupId}.common.BaseResponse;
import ${groupId}.common.PageDM;
import ${groupId}.domain.${entity}DM;
import org.springframework.cloud.openfeign.FallbackFactory;
import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.stereotype.Component;

import java.util.List;


@FeignClient(value = "${model}-service", fallbackFactory = ${entity}DomainApiClient.${entity}DomainApiFallbackFactory.class)
public interface ${entity}DomainApiClient extends ${entity}DomainIApi {

    @Component
    class ${entity}DomainApiFallbackFactory implements FallbackFactory<${entity}DomainApiFallbackWithFactory> {

        @Override
        public ${entity}DomainApiFallbackWithFactory create(Throwable cause) {
            return new ${entity}DomainApiFallbackWithFactory();
        }
    }

    class ${entity}DomainApiFallbackWithFactory implements ${entity}DomainApiClient {
        @Override
        public BaseResponse<List<${entity}DM>> getAll(${entity}DM dm) {
            return BaseResponse.failure(null);
        }

        @Override
        public BaseResponse<${entity}DM> add(${entity}DM dm) {
            return BaseResponse.failure(null);
        }

        @Override
        public BaseResponse<PageDM<${entity}DM>> page(${entity}DM dm, Integer current, Integer size) {
            return BaseResponse.failure(null);
        }

        @Override
        public BaseResponse<${entity}DM> queryOne(${entity}DM dm) {
            return BaseResponse.failure(null);
        }

        @Override
        public BaseResponse<${entity}DM> update(${entity}DM dm) {
            return BaseResponse.failure(null);
        }

        @Override
        public BaseResponse<${entity}DM> delete(${entity}DM dm) {
            return BaseResponse.failure(null);
        }
    }

}



